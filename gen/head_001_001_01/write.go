// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Models for urn:iso:std:iso:20022:tech:xsd:head.001.001.01 with prefix 'head'
package head_001_001_01

import (
	"encoding/xml"
)

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v BranchAndFinancialInstitutionIdentification5BAH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.FinInstnId, xml.StartElement{Name: xml.Name{Local: "head:FinInstnId"}})
	e.EncodeElement(v.BrnchId, xml.StartElement{Name: xml.Name{Local: "head:BrnchId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v BranchAndFinancialInstitutionIdentification5BAHTCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.FinInstnId, xml.StartElement{Name: xml.Name{Local: "head:FinInstnId"}})
	e.EncodeElement(v.BrnchId, xml.StartElement{Name: xml.Name{Local: "head:BrnchId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v BranchData2BAH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.Id, xml.StartElement{Name: xml.Name{Local: "head:Id"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v BranchData2BAHTCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.Id, xml.StartElement{Name: xml.Name{Local: "head:Id"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v BusinessApplicationHeaderV01) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.Fr, xml.StartElement{Name: xml.Name{Local: "head:Fr"}})
	e.EncodeElement(v.To, xml.StartElement{Name: xml.Name{Local: "head:To"}})
	e.EncodeElement(v.BizMsgIdr, xml.StartElement{Name: xml.Name{Local: "head:BizMsgIdr"}})
	e.EncodeElement(v.MsgDefIdr, xml.StartElement{Name: xml.Name{Local: "head:MsgDefIdr"}})
	e.EncodeElement(v.BizSvc, xml.StartElement{Name: xml.Name{Local: "head:BizSvc"}})
	e.EncodeElement(v.CreDt, xml.StartElement{Name: xml.Name{Local: "head:CreDt"}})
	e.EncodeElement(v.CpyDplct, xml.StartElement{Name: xml.Name{Local: "head:CpyDplct"}})
	e.EncodeElement(v.Sgntr, xml.StartElement{Name: xml.Name{Local: "head:Sgntr"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v BusinessApplicationHeaderV01TCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.Fr, xml.StartElement{Name: xml.Name{Local: "head:Fr"}})
	e.EncodeElement(v.To, xml.StartElement{Name: xml.Name{Local: "head:To"}})
	e.EncodeElement(v.BizMsgIdr, xml.StartElement{Name: xml.Name{Local: "head:BizMsgIdr"}})
	e.EncodeElement(v.MsgDefIdr, xml.StartElement{Name: xml.Name{Local: "head:MsgDefIdr"}})
	e.EncodeElement(v.BizSvc, xml.StartElement{Name: xml.Name{Local: "head:BizSvc"}})
	e.EncodeElement(v.CreDt, xml.StartElement{Name: xml.Name{Local: "head:CreDt"}})
	e.EncodeElement(v.CpyDplct, xml.StartElement{Name: xml.Name{Local: "head:CpyDplct"}})
	e.EncodeElement(v.Sgntr, xml.StartElement{Name: xml.Name{Local: "head:Sgntr"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v ClearingSystemMemberIdentification2ADMN) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.MmbId, xml.StartElement{Name: xml.Name{Local: "head:MmbId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v FinancialInstitutionIdentification8BAH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.ClrSysMmbId, xml.StartElement{Name: xml.Name{Local: "head:ClrSysMmbId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v Party9ChoiceBAH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.FIId, xml.StartElement{Name: xml.Name{Local: "head:FIId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v Party9ChoiceBAHTCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.FIId, xml.StartElement{Name: xml.Name{Local: "head:FIId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v Sgntr) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.Signature, xml.StartElement{Name: xml.Name{Local: "ds:Signature"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}
