// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Models for urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 with prefix 'ar'
package remt_001_001_04

import (
	"encoding/xml"

	"github.com/moov-io/rtp20022/pkg/rtp"
)

// XSD ComplexType declarations

type AccountIdentification4Choice struct {
	Othr *GenericAccountIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Othr,omitempty"`
}

type ActiveOrHistoricCurrencyAndAmount struct {
	Value ActiveOrHistoricCurrencyAndAmountSimpleType `xml:",chardata"`
	Ccy   ActiveOrHistoricCurrencyCode                `xml:"Ccy,attr"`
}

type AmountType3Choice struct {
	InstdAmt *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 InstdAmt,omitempty"`
}

type BranchAndFinancialInstitutionIdentification6 struct {
	FinInstnId FinancialInstitutionIdentification18 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FinInstnId"`
}

type BranchAndFinancialInstitutionIdentification6TCH struct {
	FinInstnId FinancialInstitutionIdentification18TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FinInstnId"`
}

type CashAccount38 struct {
	Id AccountIdentification4Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
}

type ClearingSystemMemberIdentification2 struct {
	MmbId Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MmbId"`
}

type ClearingSystemMemberIdentification2TCH struct {
	MmbId Max35TextTCH2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MmbId"`
}

type Contact4 struct {
	NmPrfx    *NamePrefix2Code             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 NmPrfx,omitempty"`
	Nm        *Max140Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Nm,omitempty"`
	PhneNb    *PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PhneNb,omitempty"`
	MobNb     *PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MobNb,omitempty"`
	FaxNb     *PhoneNumber                 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FaxNb,omitempty"`
	EmailAdr  *Max2048Text                 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 EmailAdr,omitempty"`
	EmailPurp *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 EmailPurp,omitempty"`
	JobTitl   *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 JobTitl,omitempty"`
	Rspnsblty *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Rspnsblty,omitempty"`
	Dept      *Max70Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dept,omitempty"`
	Othr      []*OtherContact1             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Othr,omitempty"`
	PrefrdMtd *PreferredContactMethod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PrefrdMtd,omitempty"`
}

type CreditorReferenceInformation2 struct {
	Tp  *CreditorReferenceType2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp,omitempty"`
	Ref *Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Ref,omitempty"`
}

type CreditorReferenceType1Choice struct {
	Cd    *DocumentType3Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type CreditorReferenceType2 struct {
	CdOrPrtry CreditorReferenceType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdOrPrtry"`
	Issr      *Max35Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Issr,omitempty"`
}

type DateAndDateTime2Choice struct {
	Dt   *rtp.ISODate     `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dt,omitempty"`
	DtTm *rtp.ISODateTime `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DtTm,omitempty"`
}

type DateAndPlaceOfBirth1 struct {
	BirthDt     rtp.ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 BirthDt"`
	CityOfBirth Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CityOfBirth"`
	CtryOfBirth CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CtryOfBirth"`
}

type DatePeriod2 struct {
	FrDt rtp.ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FrDt"`
	ToDt rtp.ISODate `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 ToDt"`
}

type DiscountAmountAndType1 struct {
	Tp  *DiscountAmountType1Choice        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Amt"`
}

type DiscountAmountType1Choice struct {
	Cd    *ExternalDiscountAmountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type DocumentAdjustment1 struct {
	Amt       ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Amt"`
	CdtDbtInd *CreditDebitCode                  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtDbtInd,omitempty"`
	Rsn       *Max4Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Rsn,omitempty"`
	AddtlInf  *Max140Text                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AddtlInf,omitempty"`
}

type DocumentLineIdentification1 struct {
	Tp     *DocumentLineType1 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp,omitempty"`
	Nb     *Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Nb,omitempty"`
	RltdDt *rtp.ISODate       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RltdDt,omitempty"`
}

type DocumentLineInformation1 struct {
	Id   []DocumentLineIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
	Desc *Max2048Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Desc,omitempty"`
	Amt  *RemittanceAmount3            `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Amt,omitempty"`
}

type DocumentLineType1 struct {
	CdOrPrtry DocumentLineType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdOrPrtry"`
	Issr      *Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Issr,omitempty"`
}

type DocumentLineType1Choice struct {
	Cd    *ExternalDocumentLineType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text                     `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type DocumentTCH struct {
	XMLName xml.Name
	RmtAdvc RemittanceAdviceV04TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtAdvc"`
}

type FinancialInstitutionIdentification18 struct {
	ClrSysMmbId ClearingSystemMemberIdentification2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 ClrSysMmbId"`
}

type FinancialInstitutionIdentification18TCH struct {
	ClrSysMmbId ClearingSystemMemberIdentification2TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 ClrSysMmbId"`
}

type Garnishment3 struct {
	Tp                GarnishmentType1                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp"`
	Grnshee           *PartyIdentification135            `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Grnshee,omitempty"`
	GrnshmtAdmstr     *PartyIdentification135            `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 GrnshmtAdmstr,omitempty"`
	RefNb             *Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RefNb,omitempty"`
	Dt                *rtp.ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dt,omitempty"`
	RmtdAmt           *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtdAmt,omitempty"`
	FmlyMdclInsrncInd *TrueFalseIndicator                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FmlyMdclInsrncInd,omitempty"`
	MplyeeTermntnInd  *TrueFalseIndicator                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MplyeeTermntnInd,omitempty"`
}

type Garnishment3TCH struct {
	Tp                GarnishmentType1                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp"`
	Grnshee           *PartyIdentification135TCH2        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Grnshee,omitempty"`
	GrnshmtAdmstr     *PartyIdentification135TCH2        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 GrnshmtAdmstr,omitempty"`
	RefNb             *Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RefNb,omitempty"`
	Dt                *rtp.ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dt,omitempty"`
	RmtdAmt           *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtdAmt,omitempty"`
	FmlyMdclInsrncInd *TrueFalseIndicator                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FmlyMdclInsrncInd,omitempty"`
	MplyeeTermntnInd  *TrueFalseIndicator                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MplyeeTermntnInd,omitempty"`
}

type GarnishmentType1 struct {
	CdOrPrtry GarnishmentType1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdOrPrtry"`
	Issr      *Max35Text             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Issr,omitempty"`
}

type GarnishmentType1Choice struct {
	Cd    *ExternalGarnishmentType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text                    `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type GenericAccountIdentification1 struct {
	Id Max34Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
}

type GenericOrganisationIdentification1 struct {
	Id      Max35Text                                    `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
	SchmeNm *OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 SchmeNm,omitempty"`
	Issr    *Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Issr,omitempty"`
}

type GenericOrganisationIdentification1TCH struct {
	Id Max35TextTCH2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
}

type GenericOrganisationIdentification1TCH2 struct {
	Id      Max35TextTCH2                                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
	SchmeNm *OrganisationIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 SchmeNm,omitempty"`
	Issr    *Max35Text                                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Issr,omitempty"`
}

type GenericPersonIdentification1 struct {
	Id      Max35Text                              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
	SchmeNm *PersonIdentificationSchemeName1Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 SchmeNm,omitempty"`
	Issr    *Max35Text                             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Issr,omitempty"`
}

type GroupHeader79 struct {
	MsgId    Max35Text              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MsgId"`
	CreDtTm  rtp.ISODateTime        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CreDtTm"`
	InitgPty PartyIdentification135 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 InitgPty"`
	MsgRcpt  PartyIdentification135 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MsgRcpt"`
}

type GroupHeader79TCH struct {
	MsgId    Max35TextTCH              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MsgId"`
	CreDtTm  rtp.ISODateTime           `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CreDtTm"`
	InitgPty PartyIdentification135TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 InitgPty"`
	MsgRcpt  PartyIdentification135TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 MsgRcpt"`
}

type OrganisationIdentification29 struct {
	AnyBIC *AnyBICDec2014Identifier              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AnyBIC,omitempty"`
	LEI    *LEIIdentifier                        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 LEI,omitempty"`
	Othr   []*GenericOrganisationIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Othr,omitempty"`
}

type OrganisationIdentification29TCH struct {
	Othr GenericOrganisationIdentification1TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Othr"`
}

type OrganisationIdentification29TCH2 struct {
	AnyBIC *AnyBICDec2014Identifier                  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AnyBIC,omitempty"`
	LEI    *LEIIdentifier                            `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 LEI,omitempty"`
	Othr   []*GenericOrganisationIdentification1TCH2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Othr,omitempty"`
}

type OrganisationIdentificationSchemeName1Choice struct {
	Cd    *ExternalOrganisationIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type OriginalPaymentInformation8 struct {
	Refs        TransactionReferences5                        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Refs"`
	Amt         AmountType3Choice                             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Amt"`
	ReqdExctnDt *DateAndDateTime2Choice                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 ReqdExctnDt,omitempty"`
	Dbtr        *PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dbtr,omitempty"`
	DbtrAcct    *CashAccount38                                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DbtrAcct,omitempty"`
	DbtrAgt     *BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DbtrAgt,omitempty"`
	Cdtr        *PartyIdentification135                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cdtr,omitempty"`
	CdtrAcct    *CashAccount38                                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtrAcct,omitempty"`
	CdtrAgt     *BranchAndFinancialInstitutionIdentification6 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtrAgt,omitempty"`
}

type OriginalPaymentInformation8TCH struct {
	Refs        TransactionReferences5                           `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Refs"`
	Amt         AmountType3Choice                                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Amt"`
	ReqdExctnDt *DateAndDateTime2Choice                          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 ReqdExctnDt,omitempty"`
	Dbtr        *PartyIdentification135TCH3                      `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dbtr,omitempty"`
	DbtrAcct    *CashAccount38                                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DbtrAcct,omitempty"`
	DbtrAgt     *BranchAndFinancialInstitutionIdentification6TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DbtrAgt,omitempty"`
	Cdtr        *PartyIdentification135TCH3                      `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cdtr,omitempty"`
	CdtrAcct    *CashAccount38                                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtrAcct,omitempty"`
	CdtrAgt     *BranchAndFinancialInstitutionIdentification6TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtrAgt,omitempty"`
}

type OtherContact1 struct {
	ChanlTp Max4Text    `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 ChanlTp"`
	Id      *Max128Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id,omitempty"`
}

type Party38Choice struct {
	OrgId  *OrganisationIdentification29 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 OrgId,omitempty"`
	PrvtId *PersonIdentification13       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PrvtId,omitempty"`
}

type Party38ChoiceTCH struct {
	OrgId *OrganisationIdentification29TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 OrgId,omitempty"`
}

type Party38ChoiceTCH2 struct {
	OrgId  *OrganisationIdentification29TCH2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 OrgId,omitempty"`
	PrvtId *PersonIdentification13           `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PrvtId,omitempty"`
}

type PartyIdentification135 struct {
	Nm        *Max140Text      `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Nm,omitempty"`
	PstlAdr   *PostalAddress24 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PstlAdr,omitempty"`
	Id        *Party38Choice   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id,omitempty"`
	CtryOfRes *CountryCode     `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CtryOfRes,omitempty"`
	CtctDtls  *Contact4        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CtctDtls,omitempty"`
}

type PartyIdentification135TCH struct {
	Id Party38ChoiceTCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id"`
}

type PartyIdentification135TCH2 struct {
	Nm        *Max140Text        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Nm,omitempty"`
	PstlAdr   *PostalAddress24   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PstlAdr,omitempty"`
	Id        *Party38ChoiceTCH2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Id,omitempty"`
	CtryOfRes *CountryCode       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CtryOfRes,omitempty"`
	CtctDtls  *Contact4          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CtctDtls,omitempty"`
}

type PartyIdentification135TCH3 struct {
	Nm *Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Nm,omitempty"`
}

type PersonIdentification13 struct {
	DtAndPlcOfBirth *DateAndPlaceOfBirth1           `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DtAndPlcOfBirth,omitempty"`
	Othr            []*GenericPersonIdentification1 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Othr,omitempty"`
}

type PersonIdentificationSchemeName1Choice struct {
	Cd    *ExternalPersonIdentification1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type PostalAddress24 struct {
	StrtNm      *Max70Text   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 StrtNm,omitempty"`
	BldgNb      *Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 BldgNb,omitempty"`
	PstCd       *Max16Text   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PstCd,omitempty"`
	TwnNm       *Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TwnNm,omitempty"`
	CtrySubDvsn *Max35Text   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CtrySubDvsn,omitempty"`
	Ctry        *CountryCode `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Ctry,omitempty"`
	AdrLine     []*Max70Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AdrLine,omitempty"`
}

type ReferredDocumentInformation7 struct {
	Tp       *ReferredDocumentType4      `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp,omitempty"`
	Nb       *Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Nb,omitempty"`
	RltdDt   *rtp.ISODate                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RltdDt,omitempty"`
	LineDtls []*DocumentLineInformation1 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 LineDtls,omitempty"`
}

type ReferredDocumentType3Choice struct {
	Cd    *DocumentType6Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type ReferredDocumentType4 struct {
	CdOrPrtry ReferredDocumentType3Choice `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdOrPrtry"`
	Issr      *Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Issr,omitempty"`
}

type RemittanceAdviceV04 struct {
	GrpHdr GroupHeader79           `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 GrpHdr"`
	RmtInf RemittanceInformation19 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtInf"`
}

type RemittanceAdviceV04TCH struct {
	GrpHdr GroupHeader79TCH           `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 GrpHdr"`
	RmtInf RemittanceInformation19TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtInf"`
}

type RemittanceAmount2 struct {
	DuePyblAmt        *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DuePyblAmt,omitempty"`
	DscntApldAmt      []*DiscountAmountAndType1          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DscntApldAmt,omitempty"`
	CdtNoteAmt        *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtNoteAmt,omitempty"`
	TaxAmt            []*TaxAmountAndType1               `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxAmt,omitempty"`
	AdjstmntAmtAndRsn []*DocumentAdjustment1             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AdjstmntAmtAndRsn,omitempty"`
	RmtdAmt           *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtdAmt,omitempty"`
}

type RemittanceAmount3 struct {
	DuePyblAmt        *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DuePyblAmt,omitempty"`
	DscntApldAmt      []*DiscountAmountAndType1          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DscntApldAmt,omitempty"`
	CdtNoteAmt        *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtNoteAmt,omitempty"`
	TaxAmt            []*TaxAmountAndType1               `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxAmt,omitempty"`
	AdjstmntAmtAndRsn []*DocumentAdjustment1             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AdjstmntAmtAndRsn,omitempty"`
	RmtdAmt           *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtdAmt,omitempty"`
}

type RemittanceInformation19 struct {
	RmtId       Max35Text                            `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtId"`
	Ustrd       []*Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Ustrd,omitempty"`
	Strd        []*StructuredRemittanceInformation16 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Strd,omitempty"`
	OrgnlPmtInf OriginalPaymentInformation8          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 OrgnlPmtInf"`
}

type RemittanceInformation19TCH struct {
	RmtId       Max35Text                               `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RmtId"`
	Ustrd       []*Max140Text                           `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Ustrd,omitempty"`
	Strd        []*StructuredRemittanceInformation16TCH `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Strd,omitempty"`
	OrgnlPmtInf OriginalPaymentInformation8TCH          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 OrgnlPmtInf"`
}

type StructuredRemittanceInformation16 struct {
	RfrdDocInf  []*ReferredDocumentInformation7 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RfrdDocInf,omitempty"`
	RfrdDocAmt  *RemittanceAmount2              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RfrdDocAmt,omitempty"`
	CdtrRefInf  *CreditorReferenceInformation2  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtrRefInf,omitempty"`
	Invcr       *PartyIdentification135         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Invcr,omitempty"`
	Invcee      *PartyIdentification135         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Invcee,omitempty"`
	TaxRmt      *TaxInformation7                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxRmt,omitempty"`
	GrnshmtRmt  *Garnishment3                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 GrnshmtRmt,omitempty"`
	AddtlRmtInf []*Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AddtlRmtInf,omitempty"`
}

type StructuredRemittanceInformation16TCH struct {
	RfrdDocInf  []*ReferredDocumentInformation7 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RfrdDocInf,omitempty"`
	RfrdDocAmt  *RemittanceAmount2              `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RfrdDocAmt,omitempty"`
	CdtrRefInf  *CreditorReferenceInformation2  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CdtrRefInf,omitempty"`
	Invcr       *PartyIdentification135TCH2     `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Invcr,omitempty"`
	Invcee      *PartyIdentification135TCH2     `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Invcee,omitempty"`
	TaxRmt      *TaxInformation7                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxRmt,omitempty"`
	GrnshmtRmt  *Garnishment3TCH                `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 GrnshmtRmt,omitempty"`
	AddtlRmtInf []*Max140Text                   `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AddtlRmtInf,omitempty"`
}

type TaxAmount2 struct {
	Rate         *PercentageRate                    `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Rate,omitempty"`
	TaxblBaseAmt *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxblBaseAmt,omitempty"`
	TtlAmt       *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TtlAmt,omitempty"`
	Dtls         []*TaxRecordDetails2               `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dtls,omitempty"`
}

type TaxAmountAndType1 struct {
	Tp  *TaxAmountType1Choice             `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Amt"`
}

type TaxAmountType1Choice struct {
	Cd    *ExternalTaxAmountType1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cd,omitempty"`
	Prtry *Max35Text                  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prtry,omitempty"`
}

type TaxAuthorisation1 struct {
	Titl *Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Titl,omitempty"`
	Nm   *Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Nm,omitempty"`
}

type TaxInformation7 struct {
	Cdtr            *TaxParty1                         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Cdtr,omitempty"`
	Dbtr            *TaxParty2                         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dbtr,omitempty"`
	UltmtDbtr       *TaxParty2                         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 UltmtDbtr,omitempty"`
	AdmstnZone      *Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AdmstnZone,omitempty"`
	RefNb           *Max140Text                        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RefNb,omitempty"`
	Mtd             *Max35Text                         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Mtd,omitempty"`
	TtlTaxblBaseAmt *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TtlTaxblBaseAmt,omitempty"`
	TtlTaxAmt       *ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TtlTaxAmt,omitempty"`
	Dt              *rtp.ISODate                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Dt,omitempty"`
	SeqNb           *Number                            `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 SeqNb,omitempty"`
	Rcrd            []*TaxRecord2                      `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Rcrd,omitempty"`
}

type TaxParty1 struct {
	TaxId  *Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxId,omitempty"`
	RegnId *Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RegnId,omitempty"`
	TaxTp  *Max35Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxTp,omitempty"`
}

type TaxParty2 struct {
	TaxId   *Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxId,omitempty"`
	RegnId  *Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 RegnId,omitempty"`
	TaxTp   *Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxTp,omitempty"`
	Authstn *TaxAuthorisation1 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Authstn,omitempty"`
}

type TaxPeriod2 struct {
	Yr     *rtp.ISODate          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Yr,omitempty"`
	Tp     *TaxRecordPeriod1Code `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp,omitempty"`
	FrToDt *DatePeriod2          `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FrToDt,omitempty"`
}

type TaxRecord2 struct {
	Tp       *Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Tp,omitempty"`
	Ctgy     *Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Ctgy,omitempty"`
	CtgyDtls *Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CtgyDtls,omitempty"`
	DbtrSts  *Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 DbtrSts,omitempty"`
	CertId   *Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 CertId,omitempty"`
	FrmsCd   *Max35Text  `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 FrmsCd,omitempty"`
	Prd      *TaxPeriod2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prd,omitempty"`
	TaxAmt   *TaxAmount2 `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TaxAmt,omitempty"`
	AddtlInf *Max140Text `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 AddtlInf,omitempty"`
}

type TaxRecordDetails2 struct {
	Prd *TaxPeriod2                       `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Prd,omitempty"`
	Amt ActiveOrHistoricCurrencyAndAmount `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 Amt"`
}

type TransactionReferences5 struct {
	PmtInfId   *Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 PmtInfId,omitempty"`
	InstrId    *Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 InstrId,omitempty"`
	EndToEndId Max35Text         `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 EndToEndId"`
	TxId       *Max35Text        `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 TxId,omitempty"`
	UETR       *UUIDv4Identifier `xml:"urn:iso:std:iso:20022:tech:xsd:remt.001.001.04 UETR,omitempty"`
}

// XSD SimpleType declarations

type ActiveOrHistoricCurrencyAndAmountSimpleType rtp.Amount

type ActiveOrHistoricCurrencyCode string

const ActiveOrHistoricCurrencyCodeUsd ActiveOrHistoricCurrencyCode = "USD"

type AnyBICDec2014Identifier string

type CountryCode string

const CountryCodeAd CountryCode = "AD"
const CountryCodeAe CountryCode = "AE"
const CountryCodeAf CountryCode = "AF"
const CountryCodeAg CountryCode = "AG"
const CountryCodeAi CountryCode = "AI"
const CountryCodeAl CountryCode = "AL"
const CountryCodeAm CountryCode = "AM"
const CountryCodeAo CountryCode = "AO"
const CountryCodeAq CountryCode = "AQ"
const CountryCodeAr CountryCode = "AR"
const CountryCodeAs CountryCode = "AS"
const CountryCodeAt CountryCode = "AT"
const CountryCodeAu CountryCode = "AU"
const CountryCodeAw CountryCode = "AW"
const CountryCodeAx CountryCode = "AX"
const CountryCodeAz CountryCode = "AZ"
const CountryCodeBa CountryCode = "BA"
const CountryCodeBb CountryCode = "BB"
const CountryCodeBd CountryCode = "BD"
const CountryCodeBe CountryCode = "BE"
const CountryCodeBf CountryCode = "BF"
const CountryCodeBg CountryCode = "BG"
const CountryCodeBh CountryCode = "BH"
const CountryCodeBi CountryCode = "BI"
const CountryCodeBj CountryCode = "BJ"
const CountryCodeBl CountryCode = "BL"
const CountryCodeBm CountryCode = "BM"
const CountryCodeBn CountryCode = "BN"
const CountryCodeBo CountryCode = "BO"
const CountryCodeBq CountryCode = "BQ"
const CountryCodeBr CountryCode = "BR"
const CountryCodeBs CountryCode = "BS"
const CountryCodeBt CountryCode = "BT"
const CountryCodeBv CountryCode = "BV"
const CountryCodeBw CountryCode = "BW"
const CountryCodeBy CountryCode = "BY"
const CountryCodeBz CountryCode = "BZ"
const CountryCodeCa CountryCode = "CA"
const CountryCodeCc CountryCode = "CC"
const CountryCodeCd CountryCode = "CD"
const CountryCodeCf CountryCode = "CF"
const CountryCodeCg CountryCode = "CG"
const CountryCodeCh CountryCode = "CH"
const CountryCodeCi CountryCode = "CI"
const CountryCodeCk CountryCode = "CK"
const CountryCodeCl CountryCode = "CL"
const CountryCodeCm CountryCode = "CM"
const CountryCodeCn CountryCode = "CN"
const CountryCodeCo CountryCode = "CO"
const CountryCodeCr CountryCode = "CR"
const CountryCodeCu CountryCode = "CU"
const CountryCodeCv CountryCode = "CV"
const CountryCodeCw CountryCode = "CW"
const CountryCodeCx CountryCode = "CX"
const CountryCodeCy CountryCode = "CY"
const CountryCodeCz CountryCode = "CZ"
const CountryCodeDe CountryCode = "DE"
const CountryCodeDj CountryCode = "DJ"
const CountryCodeDk CountryCode = "DK"
const CountryCodeDm CountryCode = "DM"
const CountryCodeDo CountryCode = "DO"
const CountryCodeDz CountryCode = "DZ"
const CountryCodeEc CountryCode = "EC"
const CountryCodeEe CountryCode = "EE"
const CountryCodeEg CountryCode = "EG"
const CountryCodeEh CountryCode = "EH"
const CountryCodeEr CountryCode = "ER"
const CountryCodeEs CountryCode = "ES"
const CountryCodeEt CountryCode = "ET"
const CountryCodeFi CountryCode = "FI"
const CountryCodeFj CountryCode = "FJ"
const CountryCodeFk CountryCode = "FK"
const CountryCodeFm CountryCode = "FM"
const CountryCodeFo CountryCode = "FO"
const CountryCodeFr CountryCode = "FR"
const CountryCodeGa CountryCode = "GA"
const CountryCodeGb CountryCode = "GB"
const CountryCodeGd CountryCode = "GD"
const CountryCodeGe CountryCode = "GE"
const CountryCodeGf CountryCode = "GF"
const CountryCodeGg CountryCode = "GG"
const CountryCodeGh CountryCode = "GH"
const CountryCodeGi CountryCode = "GI"
const CountryCodeGl CountryCode = "GL"
const CountryCodeGm CountryCode = "GM"
const CountryCodeGn CountryCode = "GN"
const CountryCodeGp CountryCode = "GP"
const CountryCodeGq CountryCode = "GQ"
const CountryCodeGr CountryCode = "GR"
const CountryCodeGs CountryCode = "GS"
const CountryCodeGt CountryCode = "GT"
const CountryCodeGu CountryCode = "GU"
const CountryCodeGw CountryCode = "GW"
const CountryCodeGy CountryCode = "GY"
const CountryCodeHk CountryCode = "HK"
const CountryCodeHm CountryCode = "HM"
const CountryCodeHn CountryCode = "HN"
const CountryCodeHr CountryCode = "HR"
const CountryCodeHt CountryCode = "HT"
const CountryCodeHu CountryCode = "HU"
const CountryCodeId CountryCode = "ID"
const CountryCodeIe CountryCode = "IE"
const CountryCodeIl CountryCode = "IL"
const CountryCodeIm CountryCode = "IM"
const CountryCodeIn CountryCode = "IN"
const CountryCodeIo CountryCode = "IO"
const CountryCodeIq CountryCode = "IQ"
const CountryCodeIr CountryCode = "IR"
const CountryCodeIs CountryCode = "IS"
const CountryCodeIt CountryCode = "IT"
const CountryCodeJe CountryCode = "JE"
const CountryCodeJm CountryCode = "JM"
const CountryCodeJo CountryCode = "JO"
const CountryCodeJp CountryCode = "JP"
const CountryCodeKe CountryCode = "KE"
const CountryCodeKg CountryCode = "KG"
const CountryCodeKh CountryCode = "KH"
const CountryCodeKi CountryCode = "KI"
const CountryCodeKm CountryCode = "KM"
const CountryCodeKn CountryCode = "KN"
const CountryCodeKp CountryCode = "KP"
const CountryCodeKr CountryCode = "KR"
const CountryCodeKw CountryCode = "KW"
const CountryCodeKy CountryCode = "KY"
const CountryCodeKz CountryCode = "KZ"
const CountryCodeLa CountryCode = "LA"
const CountryCodeLb CountryCode = "LB"
const CountryCodeLc CountryCode = "LC"
const CountryCodeLi CountryCode = "LI"
const CountryCodeLk CountryCode = "LK"
const CountryCodeLr CountryCode = "LR"
const CountryCodeLs CountryCode = "LS"
const CountryCodeLt CountryCode = "LT"
const CountryCodeLu CountryCode = "LU"
const CountryCodeLv CountryCode = "LV"
const CountryCodeLy CountryCode = "LY"
const CountryCodeMa CountryCode = "MA"
const CountryCodeMc CountryCode = "MC"
const CountryCodeMd CountryCode = "MD"
const CountryCodeMe CountryCode = "ME"
const CountryCodeMf CountryCode = "MF"
const CountryCodeMg CountryCode = "MG"
const CountryCodeMh CountryCode = "MH"
const CountryCodeMk CountryCode = "MK"
const CountryCodeMl CountryCode = "ML"
const CountryCodeMm CountryCode = "MM"
const CountryCodeMn CountryCode = "MN"
const CountryCodeMo CountryCode = "MO"
const CountryCodeMp CountryCode = "MP"
const CountryCodeMq CountryCode = "MQ"
const CountryCodeMr CountryCode = "MR"
const CountryCodeMs CountryCode = "MS"
const CountryCodeMt CountryCode = "MT"
const CountryCodeMu CountryCode = "MU"
const CountryCodeMv CountryCode = "MV"
const CountryCodeMw CountryCode = "MW"
const CountryCodeMx CountryCode = "MX"
const CountryCodeMy CountryCode = "MY"
const CountryCodeMz CountryCode = "MZ"
const CountryCodeNa CountryCode = "NA"
const CountryCodeNc CountryCode = "NC"
const CountryCodeNe CountryCode = "NE"
const CountryCodeNf CountryCode = "NF"
const CountryCodeNg CountryCode = "NG"
const CountryCodeNi CountryCode = "NI"
const CountryCodeNl CountryCode = "NL"
const CountryCodeNo CountryCode = "NO"
const CountryCodeNp CountryCode = "NP"
const CountryCodeNr CountryCode = "NR"
const CountryCodeNu CountryCode = "NU"
const CountryCodeNz CountryCode = "NZ"
const CountryCodeOm CountryCode = "OM"
const CountryCodePa CountryCode = "PA"
const CountryCodePe CountryCode = "PE"
const CountryCodePf CountryCode = "PF"
const CountryCodePg CountryCode = "PG"
const CountryCodePh CountryCode = "PH"
const CountryCodePk CountryCode = "PK"
const CountryCodePl CountryCode = "PL"
const CountryCodePm CountryCode = "PM"
const CountryCodePn CountryCode = "PN"
const CountryCodePr CountryCode = "PR"
const CountryCodePs CountryCode = "PS"
const CountryCodePt CountryCode = "PT"
const CountryCodePw CountryCode = "PW"
const CountryCodePy CountryCode = "PY"
const CountryCodeQa CountryCode = "QA"
const CountryCodeRe CountryCode = "RE"
const CountryCodeRo CountryCode = "RO"
const CountryCodeRs CountryCode = "RS"
const CountryCodeRu CountryCode = "RU"
const CountryCodeRw CountryCode = "RW"
const CountryCodeSa CountryCode = "SA"
const CountryCodeSb CountryCode = "SB"
const CountryCodeSc CountryCode = "SC"
const CountryCodeSd CountryCode = "SD"
const CountryCodeSe CountryCode = "SE"
const CountryCodeSg CountryCode = "SG"
const CountryCodeSh CountryCode = "SH"
const CountryCodeSi CountryCode = "SI"
const CountryCodeSj CountryCode = "SJ"
const CountryCodeSk CountryCode = "SK"
const CountryCodeSl CountryCode = "SL"
const CountryCodeSm CountryCode = "SM"
const CountryCodeSn CountryCode = "SN"
const CountryCodeSo CountryCode = "SO"
const CountryCodeSr CountryCode = "SR"
const CountryCodeSs CountryCode = "SS"
const CountryCodeSt CountryCode = "ST"
const CountryCodeSv CountryCode = "SV"
const CountryCodeSx CountryCode = "SX"
const CountryCodeSy CountryCode = "SY"
const CountryCodeSz CountryCode = "SZ"
const CountryCodeTc CountryCode = "TC"
const CountryCodeTd CountryCode = "TD"
const CountryCodeTf CountryCode = "TF"
const CountryCodeTg CountryCode = "TG"
const CountryCodeTh CountryCode = "TH"
const CountryCodeTj CountryCode = "TJ"
const CountryCodeTk CountryCode = "TK"
const CountryCodeTl CountryCode = "TL"
const CountryCodeTm CountryCode = "TM"
const CountryCodeTn CountryCode = "TN"
const CountryCodeTo CountryCode = "TO"
const CountryCodeTr CountryCode = "TR"
const CountryCodeTt CountryCode = "TT"
const CountryCodeTv CountryCode = "TV"
const CountryCodeTw CountryCode = "TW"
const CountryCodeTz CountryCode = "TZ"
const CountryCodeUa CountryCode = "UA"
const CountryCodeUg CountryCode = "UG"
const CountryCodeUm CountryCode = "UM"
const CountryCodeUs CountryCode = "US"
const CountryCodeUy CountryCode = "UY"
const CountryCodeUz CountryCode = "UZ"
const CountryCodeVa CountryCode = "VA"
const CountryCodeVc CountryCode = "VC"
const CountryCodeVe CountryCode = "VE"
const CountryCodeVg CountryCode = "VG"
const CountryCodeVi CountryCode = "VI"
const CountryCodeVn CountryCode = "VN"
const CountryCodeVu CountryCode = "VU"
const CountryCodeWf CountryCode = "WF"
const CountryCodeWs CountryCode = "WS"
const CountryCodeYe CountryCode = "YE"
const CountryCodeYt CountryCode = "YT"
const CountryCodeZa CountryCode = "ZA"
const CountryCodeZm CountryCode = "ZM"
const CountryCodeZw CountryCode = "ZW"

type CreditDebitCode string

const CreditDebitCodeCrdt CreditDebitCode = "CRDT"
const CreditDebitCodeDbit CreditDebitCode = "DBIT"

type DocumentType3Code string

const DocumentType3CodeDisp DocumentType3Code = "DISP"
const DocumentType3CodeFxdr DocumentType3Code = "FXDR"
const DocumentType3CodePuor DocumentType3Code = "PUOR"
const DocumentType3CodeRadm DocumentType3Code = "RADM"
const DocumentType3CodeRpin DocumentType3Code = "RPIN"
const DocumentType3CodeScor DocumentType3Code = "SCOR"

type DocumentType6Code string

const DocumentType6CodeAroi DocumentType6Code = "AROI"
const DocumentType6CodeBold DocumentType6Code = "BOLD"
const DocumentType6CodeCinv DocumentType6Code = "CINV"
const DocumentType6CodeCmcn DocumentType6Code = "CMCN"
const DocumentType6CodeCnfa DocumentType6Code = "CNFA"
const DocumentType6CodeCren DocumentType6Code = "CREN"
const DocumentType6CodeDebn DocumentType6Code = "DEBN"
const DocumentType6CodeDisp DocumentType6Code = "DISP"
const DocumentType6CodeDnfa DocumentType6Code = "DNFA"
const DocumentType6CodeHiri DocumentType6Code = "HIRI"
const DocumentType6CodeMsin DocumentType6Code = "MSIN"
const DocumentType6CodePuor DocumentType6Code = "PUOR"
const DocumentType6CodeSbin DocumentType6Code = "SBIN"
const DocumentType6CodeSoac DocumentType6Code = "SOAC"
const DocumentType6CodeTsut DocumentType6Code = "TSUT"
const DocumentType6CodeVchr DocumentType6Code = "VCHR"

type ExternalDiscountAmountType1Code string

const ExternalDiscountAmountType1CodeApds ExternalDiscountAmountType1Code = "APDS"
const ExternalDiscountAmountType1CodeStds ExternalDiscountAmountType1Code = "STDS"
const ExternalDiscountAmountType1CodeTmds ExternalDiscountAmountType1Code = "TMDS"

type ExternalDocumentLineType1Code string

const ExternalDocumentLineType1CodeAdpi ExternalDocumentLineType1Code = "ADPI"
const ExternalDocumentLineType1CodeAisb ExternalDocumentLineType1Code = "AISB"
const ExternalDocumentLineType1CodeAsnb ExternalDocumentLineType1Code = "ASNB"
const ExternalDocumentLineType1CodeCtnb ExternalDocumentLineType1Code = "CTNB"
const ExternalDocumentLineType1CodeDbsp ExternalDocumentLineType1Code = "DBSP"
const ExternalDocumentLineType1CodeEann ExternalDocumentLineType1Code = "EANN"
const ExternalDocumentLineType1CodeEinb ExternalDocumentLineType1Code = "EINB"
const ExternalDocumentLineType1CodeGsnb ExternalDocumentLineType1Code = "GSNB"
const ExternalDocumentLineType1CodeHibc ExternalDocumentLineType1Code = "HIBC"
const ExternalDocumentLineType1CodeIsbn ExternalDocumentLineType1Code = "ISBN"
const ExternalDocumentLineType1CodeLtnb ExternalDocumentLineType1Code = "LTNB"
const ExternalDocumentLineType1CodeMdnb ExternalDocumentLineType1Code = "MDNB"
const ExternalDocumentLineType1CodePrnb ExternalDocumentLineType1Code = "PRNB"
const ExternalDocumentLineType1CodePtcd ExternalDocumentLineType1Code = "PTCD"
const ExternalDocumentLineType1CodeSknb ExternalDocumentLineType1Code = "SKNB"
const ExternalDocumentLineType1CodeStnb ExternalDocumentLineType1Code = "STNB"
const ExternalDocumentLineType1CodeTonb ExternalDocumentLineType1Code = "TONB"
const ExternalDocumentLineType1CodeUpcc ExternalDocumentLineType1Code = "UPCC"
const ExternalDocumentLineType1CodeUpnb ExternalDocumentLineType1Code = "UPNB"

type ExternalGarnishmentType1Code string

const ExternalGarnishmentType1CodeGncs ExternalGarnishmentType1Code = "GNCS"
const ExternalGarnishmentType1CodeGndp ExternalGarnishmentType1Code = "GNDP"
const ExternalGarnishmentType1CodeGtpp ExternalGarnishmentType1Code = "GTPP"

type ExternalOrganisationIdentification1Code string

const ExternalOrganisationIdentification1CodeBank ExternalOrganisationIdentification1Code = "BANK"
const ExternalOrganisationIdentification1CodeCbid ExternalOrganisationIdentification1Code = "CBID"
const ExternalOrganisationIdentification1CodeChid ExternalOrganisationIdentification1Code = "CHID"
const ExternalOrganisationIdentification1CodeCinc ExternalOrganisationIdentification1Code = "CINC"
const ExternalOrganisationIdentification1CodeCoid ExternalOrganisationIdentification1Code = "COID"
const ExternalOrganisationIdentification1CodeCust ExternalOrganisationIdentification1Code = "CUST"
const ExternalOrganisationIdentification1CodeDuns ExternalOrganisationIdentification1Code = "DUNS"
const ExternalOrganisationIdentification1CodeEmpl ExternalOrganisationIdentification1Code = "EMPL"
const ExternalOrganisationIdentification1CodeGs1G ExternalOrganisationIdentification1Code = "GS1G"
const ExternalOrganisationIdentification1CodeSren ExternalOrganisationIdentification1Code = "SREN"
const ExternalOrganisationIdentification1CodeSret ExternalOrganisationIdentification1Code = "SRET"
const ExternalOrganisationIdentification1CodeTxid ExternalOrganisationIdentification1Code = "TXID"

type ExternalPersonIdentification1Code string

const ExternalPersonIdentification1CodeArnu ExternalPersonIdentification1Code = "ARNU"
const ExternalPersonIdentification1CodeCcpt ExternalPersonIdentification1Code = "CCPT"
const ExternalPersonIdentification1CodeCust ExternalPersonIdentification1Code = "CUST"
const ExternalPersonIdentification1CodeDrlc ExternalPersonIdentification1Code = "DRLC"
const ExternalPersonIdentification1CodeEmpl ExternalPersonIdentification1Code = "EMPL"
const ExternalPersonIdentification1CodeNidn ExternalPersonIdentification1Code = "NIDN"
const ExternalPersonIdentification1CodeSose ExternalPersonIdentification1Code = "SOSE"
const ExternalPersonIdentification1CodeTxid ExternalPersonIdentification1Code = "TXID"

type ExternalTaxAmountType1Code string

const ExternalTaxAmountType1CodeCity ExternalTaxAmountType1Code = "CITY"
const ExternalTaxAmountType1CodeCnty ExternalTaxAmountType1Code = "CNTY"
const ExternalTaxAmountType1CodeLocl ExternalTaxAmountType1Code = "LOCL"
const ExternalTaxAmountType1CodeProv ExternalTaxAmountType1Code = "PROV"
const ExternalTaxAmountType1CodeStat ExternalTaxAmountType1Code = "STAT"

type LEIIdentifier string

type Max128Text string

type Max140Text string

type Max16Text string

type Max2048Text string

type Max34Text string

type Max35Text string

type Max35TextTCH string

type Max35TextTCH2 string

type Max4Text string

type Max70Text string

type NamePrefix2Code string

const NamePrefix2CodeDoct NamePrefix2Code = "DOCT"
const NamePrefix2CodeMadm NamePrefix2Code = "MADM"
const NamePrefix2CodeMiks NamePrefix2Code = "MIKS"
const NamePrefix2CodeMiss NamePrefix2Code = "MISS"
const NamePrefix2CodeMist NamePrefix2Code = "MIST"

type Number float64

type PercentageRate float64

type PhoneNumber string

type PreferredContactMethod1Code string

const PreferredContactMethod1CodeCell PreferredContactMethod1Code = "CELL"
const PreferredContactMethod1CodeFaxx PreferredContactMethod1Code = "FAXX"
const PreferredContactMethod1CodeLett PreferredContactMethod1Code = "LETT"
const PreferredContactMethod1CodeMail PreferredContactMethod1Code = "MAIL"
const PreferredContactMethod1CodePhon PreferredContactMethod1Code = "PHON"

type TaxRecordPeriod1Code string

const TaxRecordPeriod1CodeHlf1 TaxRecordPeriod1Code = "HLF1"
const TaxRecordPeriod1CodeHlf2 TaxRecordPeriod1Code = "HLF2"
const TaxRecordPeriod1CodeMm01 TaxRecordPeriod1Code = "MM01"
const TaxRecordPeriod1CodeMm02 TaxRecordPeriod1Code = "MM02"
const TaxRecordPeriod1CodeMm03 TaxRecordPeriod1Code = "MM03"
const TaxRecordPeriod1CodeMm04 TaxRecordPeriod1Code = "MM04"
const TaxRecordPeriod1CodeMm05 TaxRecordPeriod1Code = "MM05"
const TaxRecordPeriod1CodeMm06 TaxRecordPeriod1Code = "MM06"
const TaxRecordPeriod1CodeMm07 TaxRecordPeriod1Code = "MM07"
const TaxRecordPeriod1CodeMm08 TaxRecordPeriod1Code = "MM08"
const TaxRecordPeriod1CodeMm09 TaxRecordPeriod1Code = "MM09"
const TaxRecordPeriod1CodeMm10 TaxRecordPeriod1Code = "MM10"
const TaxRecordPeriod1CodeMm11 TaxRecordPeriod1Code = "MM11"
const TaxRecordPeriod1CodeMm12 TaxRecordPeriod1Code = "MM12"
const TaxRecordPeriod1CodeQtr1 TaxRecordPeriod1Code = "QTR1"
const TaxRecordPeriod1CodeQtr2 TaxRecordPeriod1Code = "QTR2"
const TaxRecordPeriod1CodeQtr3 TaxRecordPeriod1Code = "QTR3"
const TaxRecordPeriod1CodeQtr4 TaxRecordPeriod1Code = "QTR4"

type TrueFalseIndicator bool

type UUIDv4Identifier string
