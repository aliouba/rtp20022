// Code generated by GoComply XSD2Go for Moov; DO NOT EDIT.
// Models for urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 with prefix 'ut'
package admn_007_001_01

import (
	"encoding/xml"

	"github.com/moov-io/rtp20022/pkg/rtp"
)

// XSD ComplexType declarations

type BranchAndFinancialInstitutionIdentification4ADMN struct {
	FinInstnId FinancialInstitutionIdentification7ADMN `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 FinInstnId"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v BranchAndFinancialInstitutionIdentification4ADMN) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.FinInstnId, xml.StartElement{Name: xml.Name{Local: "ut:FinInstnId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type ClearingSystemMemberIdentification2ADMN struct {
	MmbId Min11Max11Text `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 MmbId"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v ClearingSystemMemberIdentification2ADMN) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.MmbId, xml.StartElement{Name: xml.Name{Local: "ut:MmbId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type DatabaseReportInformation struct {
	RptCd    ReportCode                                       `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 RptCd"`
	InstrId  Max35Text                                        `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 InstrId"`
	InstgAgt BranchAndFinancialInstitutionIdentification4ADMN `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 InstgAgt"`
	InstdAgt BranchAndFinancialInstitutionIdentification4ADMN `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 InstdAgt"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v DatabaseReportInformation) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.RptCd, xml.StartElement{Name: xml.Name{Local: "ut:RptCd"}})
	e.EncodeElement(v.InstrId, xml.StartElement{Name: xml.Name{Local: "ut:InstrId"}})
	e.EncodeElement(v.InstgAgt, xml.StartElement{Name: xml.Name{Local: "ut:InstgAgt"}})
	e.EncodeElement(v.InstdAgt, xml.StartElement{Name: xml.Name{Local: "ut:InstdAgt"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type DatabaseReportInformationTCH struct {
	RptCd    ReportCodeTCH                                    `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 RptCd"`
	InstrId  Max35TextTCH2                                    `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 InstrId"`
	InstgAgt BranchAndFinancialInstitutionIdentification4ADMN `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 InstgAgt"`
	InstdAgt BranchAndFinancialInstitutionIdentification4ADMN `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 InstdAgt"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v DatabaseReportInformationTCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.RptCd, xml.StartElement{Name: xml.Name{Local: "ut:RptCd"}})
	e.EncodeElement(v.InstrId, xml.StartElement{Name: xml.Name{Local: "ut:InstrId"}})
	e.EncodeElement(v.InstgAgt, xml.StartElement{Name: xml.Name{Local: "ut:InstgAgt"}})
	e.EncodeElement(v.InstdAgt, xml.StartElement{Name: xml.Name{Local: "ut:InstdAgt"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type DatabaseReportRequest struct {
	GrpHdr   GrpHdr                    `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 GrpHdr"`
	DBRptInf DatabaseReportInformation `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 DBRptInf"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v DatabaseReportRequest) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.GrpHdr, xml.StartElement{Name: xml.Name{Local: "ut:GrpHdr"}})
	e.EncodeElement(v.DBRptInf, xml.StartElement{Name: xml.Name{Local: "ut:DBRptInf"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type DatabaseReportRequestTCH struct {
	GrpHdr   GrpHdrTCH                    `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 GrpHdr"`
	DBRptInf DatabaseReportInformationTCH `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 DBRptInf"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v DatabaseReportRequestTCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.GrpHdr, xml.StartElement{Name: xml.Name{Local: "ut:GrpHdr"}})
	e.EncodeElement(v.DBRptInf, xml.StartElement{Name: xml.Name{Local: "ut:DBRptInf"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type Document struct {
	XMLName  xml.Name
	DBRptReq DatabaseReportRequest `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 DBRptReq"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v Document) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.DBRptReq, xml.StartElement{Name: xml.Name{Local: "ut:DBRptReq"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type DocumentTCH struct {
	XMLName  xml.Name
	DBRptReq DatabaseReportRequestTCH `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 DBRptReq"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v DocumentTCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.DBRptReq, xml.StartElement{Name: xml.Name{Local: "ut:DBRptReq"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type FinancialInstitutionIdentification7ADMN struct {
	ClrSysMmbId ClearingSystemMemberIdentification2ADMN `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 ClrSysMmbId"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v FinancialInstitutionIdentification7ADMN) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.ClrSysMmbId, xml.StartElement{Name: xml.Name{Local: "ut:ClrSysMmbId"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type GrpHdr struct {
	MsgId   Max35Text       `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 MsgId"`
	CreDtTm rtp.ISODateTime `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 CreDtTm"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v GrpHdr) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.MsgId, xml.StartElement{Name: xml.Name{Local: "ut:MsgId"}})
	e.EncodeElement(v.CreDtTm, xml.StartElement{Name: xml.Name{Local: "ut:CreDtTm"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

type GrpHdrTCH struct {
	MsgId   Max35TextTCH    `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 MsgId"`
	CreDtTm rtp.ISODateTime `xml:"urn:iso:std:ma:20022:tech:xsd:admn.007.001.01 CreDtTm"`
}

// MarshalXML is a custom marshaller that allows us to manipulate the XML tag in order to use the proper namespace prefix
func (v GrpHdrTCH) MarshalXML(e *xml.Encoder, start xml.StartElement) error {
	e.EncodeToken(xml.StartElement{Name: xml.Name{Local: start.Name.Local}})
	e.EncodeElement(v.MsgId, xml.StartElement{Name: xml.Name{Local: "ut:MsgId"}})
	e.EncodeElement(v.CreDtTm, xml.StartElement{Name: xml.Name{Local: "ut:CreDtTm"}})
	e.EncodeToken(xml.EndElement{Name: xml.Name{Local: start.Name.Local}})
	return nil
}

// XSD SimpleType declarations

type Max35Text string

type Max35TextTCH string

type Max35TextTCH2 string

type Min11Max11Text string

type ReportCode string

const ReportCodeAvlbty ReportCode = "AVLBTY"

type ReportCodeTCH string

const ReportCodeTCHAvlbty ReportCodeTCH = "AVLBTY"
